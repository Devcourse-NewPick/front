{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/DevCourse-NewPick/front/src/stores/loadingStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\n\r\ninterface LoadingState {\r\n\tisLoading: boolean;\r\n\tsetLoading: (state: boolean) => void;\r\n}\r\n\r\nconst useLoadingStore = create<LoadingState>((set) => ({\r\n\tisLoading: false,\r\n\tsetLoading: (state) => set({ isLoading: state }),\r\n}));\r\n\r\nexport default useLoadingStore;\r\n"],"names":[],"mappings":";;;AAAA;;AAOA,MAAM,kBAAkB,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAgB,CAAC,MAAQ,CAAC;QACtD,WAAW;QACX,YAAY,CAAC,QAAU,IAAI;gBAAE,WAAW;YAAM;IAC/C,CAAC;uCAEc"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/DevCourse-NewPick/front/src/constants/categories.ts"],"sourcesContent":["import { Category } from '@/models/category.model';\r\n\r\nexport const CATEGORIES: Category[] = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ttitle: '전체',\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\ttitle: '정치',\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ttitle: '경제',\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ttitle: '사회',\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\ttitle: '문화',\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\ttitle: 'IT',\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\ttitle: '세계',\r\n\t},\r\n];\r\n"],"names":[],"mappings":";;;AAEO,MAAM,aAAyB;IACrC;QACC,IAAI;QACJ,OAAO;IACR;IACA;QACC,IAAI;QACJ,OAAO;IACR;IACA;QACC,IAAI;QACJ,OAAO;IACR;IACA;QACC,IAAI;QACJ,OAAO;IACR;IACA;QACC,IAAI;QACJ,OAAO;IACR;IACA;QACC,IAAI;QACJ,OAAO;IACR;IACA;QACC,IAAI;QACJ,OAAO;IACR;CACA"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/DevCourse-NewPick/front/src/utils/generateRandomData.ts"],"sourcesContent":["import { faker } from '@faker-js/faker';\r\nimport { Newsletter as INewsletter } from '@/models/newsletter.model';\r\nimport { CATEGORIES } from '@/constants/categories';\r\n\r\nexport const getRandomText = (min: number, max: number): string => {\r\n\tconst length = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\treturn faker.lorem.sentence(length);\r\n};\r\n\r\n/**\r\n * Picsum을 이용한 랜덤 이미지 URL 반환\r\n * @param width 이미지 너비 (기본값: 640)\r\n * @param height 이미지 높이 (기본값: 480)\r\n * @returns 랜덤 이미지 URL\r\n */\r\nexport const getRandomImage = (width: number = 640, height: number = 480): string => {\r\n\treturn `https://picsum.photos/${width}/${height}?random=${Math.floor(Math.random() * 1000)}`;\r\n};\r\n\r\n/**\r\n * Picsum을 이용한 랜덤 이미지 여러 개 반환\r\n * @param count 반환할 이미지 개수\r\n * @param width 이미지 너비\r\n * @param height 이미지 높이\r\n * @returns 랜덤 이미지 URL 배열\r\n */\r\nexport const getRandomImages = (count: number, width: number = 640, height: number = 480): string[] => {\r\n\treturn Array.from({ length: count }, () => getRandomImage(width, height));\r\n};\r\n\r\nexport const getNewsletters = (): INewsletter[] => {\r\n\tconst categories = CATEGORIES.filter((category) => category.title !== '전체').map((category) => category.title);\r\n\r\n\treturn Array.from({ length: 5 }, (_, dayIndex) => {\r\n\t\tconst baseDate = new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Seoul' }));\r\n\t\tbaseDate.setDate(baseDate.getDate() - dayIndex);\r\n\t\tconst dateString = baseDate.toLocaleDateString('en-CA'); // YYYY-MM-DD 형식\r\n\r\n\t\treturn categories.map((category, categoryIndex) => ({\r\n\t\t\tid: dayIndex * categories.length + categoryIndex + 1,\r\n\t\t\tcategory,\r\n\t\t\tdate: dateString,\r\n\t\t\ttitle: getRandomText(10, 25),\r\n\t\t\tsummary: getRandomText(20, 80),\r\n\t\t\timage: getRandomImage(),\r\n\t\t\tlink: `/news/${dayIndex * categories.length + categoryIndex + 1}`,\r\n\t\t\tviews: Math.floor(Math.random() * 1000),\r\n\t\t\tlikes: Math.floor(Math.random() * 500),\r\n\t\t\tcomments: Math.floor(Math.random() * 300),\r\n\t\t}));\r\n\t}).flat();\r\n};\r\n"],"names":[],"mappings":";;;;;;AAEA;AAFA;;;AAIO,MAAM,gBAAgB,CAAC,KAAa;IAC1C,MAAM,SAAS,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,MAAM,CAAC,KAAK;IAC7D,OAAO,oMAAA,CAAA,QAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC7B;AAQO,MAAM,iBAAiB,CAAC,QAAgB,GAAG,EAAE,SAAiB,GAAG;IACvE,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC,EAAE,OAAO,QAAQ,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO;AAC7F;AASO,MAAM,kBAAkB,CAAC,OAAe,QAAgB,GAAG,EAAE,SAAiB,GAAG;IACvF,OAAO,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAM,GAAG,IAAM,eAAe,OAAO;AAClE;AAEO,MAAM,iBAAiB;IAC7B,MAAM,aAAa,iIAAA,CAAA,aAAU,CAAC,MAAM,CAAC,CAAC,WAAa,SAAS,KAAK,KAAK,MAAM,GAAG,CAAC,CAAC,WAAa,SAAS,KAAK;IAE5G,OAAO,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GAAG,CAAC,GAAG;QACpC,MAAM,WAAW,IAAI,KAAK,IAAI,OAAO,cAAc,CAAC,SAAS;YAAE,UAAU;QAAa;QACtF,SAAS,OAAO,CAAC,SAAS,OAAO,KAAK;QACtC,MAAM,aAAa,SAAS,kBAAkB,CAAC,UAAU,gBAAgB;QAEzE,OAAO,WAAW,GAAG,CAAC,CAAC,UAAU,gBAAkB,CAAC;gBACnD,IAAI,WAAW,WAAW,MAAM,GAAG,gBAAgB;gBACnD;gBACA,MAAM;gBACN,OAAO,cAAc,IAAI;gBACzB,SAAS,cAAc,IAAI;gBAC3B,OAAO;gBACP,MAAM,CAAC,MAAM,EAAE,WAAW,WAAW,MAAM,GAAG,gBAAgB,GAAG;gBACjE,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;gBAClC,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;gBAClC,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACtC,CAAC;IACF,GAAG,IAAI;AACR"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/DevCourse-NewPick/front/src/stores/newsletterStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { Newsletter as INewsletter } from '@/models/newsletter.model';\r\nimport { getNewsletters } from '@/utils/generateRandomData';\r\n\r\ninterface NewsletterState {\r\n\tnewsletters: INewsletter[];\r\n\tinitializeNewsletters: () => void; // 초기화를 위한 함수 추가\r\n}\r\n\r\nconst useNewsletterStore = create<NewsletterState>((set, get) => ({\r\n\tnewsletters: [], // 초기 상태를 빈 배열로 설정\r\n\tinitializeNewsletters: () => {\r\n\t\tconst currentNewsletters = get().newsletters;\r\n\t\tif (currentNewsletters.length === 0) {\r\n\t\t\t// 뉴스레터가 없을 경우에만 생성\r\n\t\t\tset({ newsletters: getNewsletters() });\r\n\t\t}\r\n\t},\r\n}));\r\n\r\nexport default useNewsletterStore;\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;;AASA,MAAM,qBAAqB,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAmB,CAAC,KAAK,MAAQ,CAAC;QACjE,aAAa,EAAE;QACf,uBAAuB;YACtB,MAAM,qBAAqB,MAAM,WAAW;YAC5C,IAAI,mBAAmB,MAAM,KAAK,GAAG;gBACpC,mBAAmB;gBACnB,IAAI;oBAAE,aAAa,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD;gBAAI;YACrC;QACD;IACD,CAAC;uCAEc"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/DevCourse-NewPick/front/src/hooks/useNewsletter.ts"],"sourcesContent":["import { useEffect } from 'react';\r\nimport useLoadingStore from '@/stores/loadingStore';\r\nimport useNewsletterStore from '@/stores/newsletterStore';\r\n\r\nexport const useNewsletter = () => {\r\n\tconst { setLoading } = useLoadingStore();\r\n\tconst newsletters = useNewsletterStore((state) => state.newsletters);\r\n\tconst initializeNewsletters = useNewsletterStore((state) => state.initializeNewsletters);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loadData = async () => {\r\n\t\t\tsetLoading(true); // 로딩 시작\r\n\t\t\tinitializeNewsletters(); // 데이터 초기화\r\n\t\t\tsetLoading(false); // 로딩 종료\r\n\t\t};\r\n\t\tloadData();\r\n\t}, [initializeNewsletters, setLoading]);\r\n\r\n\treturn { newsletters, initializeNewsletters };\r\n};\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;AAEO,MAAM,gBAAgB;;IAC5B,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,UAAe,AAAD;IACrC,MAAM,cAAc,CAAA,GAAA,mIAAA,CAAA,UAAkB,AAAD;yDAAE,CAAC,QAAU,MAAM,WAAW;;IACnE,MAAM,wBAAwB,CAAA,GAAA,mIAAA,CAAA,UAAkB,AAAD;mEAAE,CAAC,QAAU,MAAM,qBAAqB;;IAEvF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACT,MAAM;oDAAW;oBAChB,WAAW,OAAO,QAAQ;oBAC1B,yBAAyB,UAAU;oBACnC,WAAW,QAAQ,QAAQ;gBAC5B;;YACA;QACD;kCAAG;QAAC;QAAuB;KAAW;IAEtC,OAAO;QAAE;QAAa;IAAsB;AAC7C;GAfa;;QACW,gIAAA,CAAA,UAAe;QAClB,mIAAA,CAAA,UAAkB;QACR,mIAAA,CAAA,UAAkB"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/DevCourse-NewPick/front/src/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useNewsletter } from '@/hooks/useNewsletter';\r\n\r\nimport { styled } from 'styled-components';\r\nimport Title from '@/components/common/Title';\r\nimport FullWidthPanel from '@/components/common/FullWidthPanel';\r\nimport HeroSection from '@/components/home/HeroSection';\r\nimport TrendSection from '@/components/home/TrendSection';\r\nimport SubscribeSection from '@/components/home/SubscribeSection';\r\n\r\nconst HomePage = () => {\r\n\tconst { newsletters } = useNewsletter();\r\n\r\n\treturn (\r\n\t\t<StyledHomePage>\r\n\t\t\t<HeroSection />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<TrendSection newsletters={newsletters} />\r\n\r\n\t\t\t<FullWidthPanel>\r\n\t\t\t\t<Title size=\"extraLarge\" weight=\"bold\" color=\"background\">\r\n\t\t\t\t\t📩 지금 뉴스레터를 시작해보세요\r\n\t\t\t\t</Title>\r\n\t\t\t</FullWidthPanel>\r\n\r\n\t\t\t<SubscribeSection />\r\n\t\t</StyledHomePage>\r\n\t);\r\n};\r\n\r\nconst StyledHomePage = styled.div`\r\n\twidth: 100%;\r\n\tgap: 2rem;\r\n\r\n\thr {\r\n\t\twidth: 100%;\r\n\t\tborder: none;\r\n\t\tborder-bottom: 1px solid ${({ theme }) => theme.color.border};\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t@media ${({ theme }) => theme.mediaQuery.tablet} {\r\n\t\tpadding: 0 1rem;\r\n\t}\r\n`;\r\n\r\nexport default HomePage;\r\n"],"names":[],"mappings":";;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;AAJA;;;;;;;;AAWA,MAAM,WAAW;;IAChB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,gBAAa,AAAD;IAEpC,qBACC,6LAAC;;0BACA,6LAAC;;;;;0BACD,6LAAC;;;;;0BAED,6LAAC;gBAAa,aAAa;;;;;;0BAE3B,6LAAC;0BACA,cAAA,6LAAC;oBAAM,MAAK;oBAAa,QAAO;oBAAO,OAAM;8BAAa;;;;;;;;;;;0BAK3D,6LAAC;;;;;;;;;;;AAGJ;GAnBM;;QACmB,gIAAA,CAAA,gBAAa;;;KADhC;AAqBN,MAAM,iBAAiB,yLAAA,CAAA,SAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;2BAOP,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,KAAK,CAAC,MAAM,CAAC;;;;;QAKvD,EAAE,CAAC,EAAE,KAAK,EAAE,GAAK,MAAM,UAAU,CAAC,MAAM,CAAC;;;AAGjD,CAAC;MAfK;uCAiBS"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}